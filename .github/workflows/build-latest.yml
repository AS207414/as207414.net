name: Build AS207414 development website packages

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:

  metadata_raw-version:
    name: Determine the intended website version
    runs-on: ubuntu-latest
    outputs:
      raw-version: ${{ steps.gitversion.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Git Version
        uses: codacy/git-version@2.2.0
        id: gitversion
        with:
          release-branch: main
          dev-branch: develop

  metadata_go-version:
    name: "Determine Go toolchain version"
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Determine Go version
        id: version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "::set-output name=go-version::$(cat .go-version)"

  build:
      name: Build for linux_amd64
      runs-on: ubuntu-latest
      needs:
        - metadata_raw-version
        - metadata_go-version
      steps:
        - uses: actions/checkout@v2
        - name: Install Go toolchain
          uses: actions/setup-go@v2
          with:
            go-version: ${{ needs.metadata_go-version.outputs.go-version }}

        - name: Build binaries
          env:
            GOOS: linux
            GOARCH: amd64
            CGO_ENABLED: 0
          run: |
            go build -a -installsuffix cgo -ldflags "-w -s -X main.version=${{ needs.metadata_raw-version.outputs.raw-version }}" \
              -o=bin/as207414_linux_amd64 \
              ./cmd/ui && \
            chmod +x bin/as207414_linux_amd64 && \
            cp bin/as207414_linux_amd64 build/docker/as207414_linux_amd64

        - name: Docker Login
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Login to Github Packages
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ganawa
            password: ${{ secrets.GHP_TOKEN }}

        - name: Build docker image
          run: |
            cd build/docker
            docker build . \
              -t ${{ secrets.DOCKER_HUB_USERNAME }}/as207414-ui:latest \
              -t ghcr.io/${{ github.repository_owner }}/as207414-ui:latest

        - name: Push docker image
          run: |
            docker push ${{ secrets.DOCKER_HUB_USERNAME }}/as207414-ui:latest
            docker push ghcr.io/${{ github.repository_owner }}/as207414-ui:latest